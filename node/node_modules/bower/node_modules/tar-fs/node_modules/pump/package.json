{
  "name": "pump",
  "version": "1.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/pump.git"
  },
  "license": "MIT",
  "description": "pipe streams together and close all of them if one of them closes",
  "keywords": [
    "streams",
    "pipe",
    "destroy",
    "callback"
  ],
  "author": {
    "name": "Mathias Buus Madsen",
    "email": "mathiasbuus@gmail.com"
  },
  "dependencies": {
    "end-of-stream": "^1.1.0",
    "once": "^1.3.1"
  },
  "scripts": {
    "test": "node test.js"
  },
  "readme": "# pump\n\npump is a small node module that pipes streams together and destroys all of them if one of them closes.\n\n```\nnpm install pump\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/pump.svg?style=flat)](http://travis-ci.org/mafintosh/pump)\n\n## What problem does it solve?\n\nWhen using standard `source.pipe(dest)` source will _not_ be destroyed if dest emits close or an error.\nYou are also not able to provide a callback to tell when then pipe has finished.\n\npump does these two things for you\n\n## Usage\n\nSimply pass the streams you want to pipe together to pump and add an optional callback\n\n``` js\nvar pump = require('pump')\nvar fs = require('fs')\n\nvar source = fs.createReadStream('/dev/random')\nvar dest = fs.createWriteStream('/dev/null')\n\npump(source, dest, function(err) {\n  console.log('pipe finished', err)\n})\n\nsetTimeout(function() {\n  dest.destroy() // when dest is closed pump will destroy source\n}, 1000)\n```\n\nYou can use pump to pipe more than two streams together as well\n\n``` js\nvar transform = someTransformStream()\n\npump(source, transform, anotherTransform, dest, function(err) {\n  console.log('pipe finished', err)\n})\n```\n\nIf `source`, `transform`, `anotherTransform` or `dest` closes all of them will be destroyed.\n\n## License\n\nMIT\n\n## Related\n\n`pump` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mafintosh/pump/issues"
  },
  "homepage": "https://github.com/mafintosh/pump#readme",
  "_id": "pump@1.0.1",
  "_shasum": "f1f1409fb9bd1085bbdb576b43b84ec4b5eadc1a",
  "_resolved": "https://registry.npmjs.org/pump/-/pump-1.0.1.tgz",
  "_from": "pump@>=1.0.0 <2.0.0"
}
